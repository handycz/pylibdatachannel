name: Build

on: [ push, pull_request ]

jobs:
  build_wheels:
    name: Build wheels for ${{ matrix.python-version }} (${{ matrix.platform }}) on ${{ matrix.arch }}
    runs-on: ${{ matrix.arch == 'x86_64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }} 
    strategy:
      matrix:
        platform: [ manylinux, musllinux ]
        arch: ["x86_64", "aarch64"]
        python-version: [ cp311, cp312, cp313 ]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: "${{ matrix.python-version }}-${{ matrix.platform }}_${{ matrix.arch }}"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheel-${{ matrix.python-version}}-${{ matrix.platform || matrix.runs-on }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl

  publish-to-testpypi:
    name: Publish to Test Pypi
    needs:
    - build_wheels
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pylibdatachannel
    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-wheel-*
        path: dist/
        merge-multiple: true
    - name: Publish distribution package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish to Pypi
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
    - build_wheels
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pylibdatachannel
    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-wheel-*
        path: dist/
        merge-multiple: true

    - name: Publish distribution package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

